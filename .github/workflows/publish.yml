name: Publish

# This will trigger the action on each push to the `release` branch.
on:
    push:
        tags:
            - "v*"
    workflow_dispatch:

jobs:
    publish-tauri:
        permissions:
            contents: write
        strategy:
            fail-fast: false
            matrix:
                settings:
                    - platform: "macos-12"
                      args: "--target universal-apple-darwin"
                    - platform: "ubuntu-22.04"
                      args: ""
                    - platform: "windows-2022"
                      args: ""

        runs-on: ${{ matrix.settings.platform }}
        steps:
            - uses: actions/checkout@v4

            - uses: pnpm/action-setup@v2
              with:
                  version: 8

            - name: setup node
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: "pnpm"

            - name: install Rust stable
              uses: dtolnay/rust-toolchain@stable
              with:
                  targets: aarch64-apple-darwin

            - uses: Swatinem/rust-cache@v2
              with:
                  cache-on-failure: true
                  workspaces: |
                      ./src-tauri -> target

            - name: install dependencies (ubuntu only)
              if: contains(matrix.settings.platform, 'ubuntu')
              run: |
                  sudo apt-get update
                  sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf libudev-dev

            - name: install frontend dependencies
              run: pnpm install --frozen-lockfile

            - uses: tauri-apps/tauri-action@v0
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tagName: ${{ github.ref_name }} # the action automatically replaces \_\_VERSION\_\_ with the app version
                  releaseName: "v__VERSION__"
                  releaseBody: "See the assets to download this version and install."
                  releaseDraft: true
                  prerelease: false
                  args: ${{ matrix.settings.args }}
